#!/usr/bin/env php
<?php

require_once __DIR__ . '/../../../config/config.inc.php';
require_once __DIR__ . '/../vendor/autoload.php';

use Accelasearch\Accelasearch\Config\Config;
use Accelasearch\Accelasearch\Decorator\ProductDecorator;
use Accelasearch\Accelasearch\Entity\Shop;
use Accelasearch\Accelasearch\Entity\Language;
use Accelasearch\Accelasearch\Command\Feed;
use Accelasearch\Accelasearch\Factory\ProductDataFactory;
use Accelasearch\Accelasearch\Formatter\ArrayFormatter;
use Accelasearch\Accelasearch\Repository\CategoryRepository;
use Accelasearch\Accelasearch\Repository\ProductRepository;

@ignore_user_abort(true);
@set_time_limit(0);
@ini_set('memory_limit', '1024M');
function parseCommandLineArguments($argv)
{
    $options = [];
    $arguments = [];

    for ($i = 1; $i < count($argv); $i++) {
        $arg = $argv[$i];

        if (strpos($arg, '--') === 0) {
            list($key, $value) = explode('=', substr($arg, 2), 2) + [null, true];
            $options[$key] = $value;
        } elseif (strpos($arg, '-') === 0) {
            $shortOptions = str_split(substr($arg, 1));
            foreach ($shortOptions as $shortOption) {
                $options[$shortOption] = true;
            }
        } else {
            $arguments[] = $arg;
        }
    }

    return ['options' => $options, 'arguments' => $arguments];
}

if (!defined('_PS_VERSION_')) {
    exit;
}

if (php_sapi_name() !== 'cli') {
    exit;
}

if ($argc < 3) {
    echo "Usage: php bin/feed <id_shop> <id_lang>\n";
    exit(1);
}

$cmd = parseCommandLineArguments($argv);

$id_shop = $cmd["arguments"][0];
$id_lang = $cmd["arguments"][1];
$debugMode = isset($cmd["options"]["debug"]) || isset($cmd["options"]["d"]);

@Context::getContext()->controller->controller_type = 'front';

$shop = new Shop($id_shop);
$language = new Language($id_lang);

\Shop::setContext(\Shop::CONTEXT_SHOP, $id_shop);
\Context::getContext()->shop = $shop->ps;

// set default currency
$currency = new \Currency(Config::get("PS_CURRENCY_DEFAULT"));
\Context::getContext()->currency = $currency;

$productRepository = new ProductRepository(\Db::getInstance(), \Context::getContext());
$categoryRepository = new CategoryRepository(\Db::getInstance(), \Context::getContext());

$productService = ProductDataFactory::create(
    $productRepository,
    new ProductDecorator(
        $productRepository,
        $shop,
        $language,
        new ArrayFormatter(),
        \Context::getContext(),
        $categoryRepository
    ),
    new Config(),
    Config::get("_ACCELASEARCH_SYNCTYPE")
);

$feed = new Feed($shop, $language, $productService);
$feed->setDebug($debugMode);
$feed->generate();